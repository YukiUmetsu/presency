<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.4.1/cropper.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.4.1/cropper.min.js"></script>
<%= form_for @changeset, @action, [multipart: true, id: "admin-user-form"], fn f -> %>
  <%= if @changeset.action do %>
    <div class="notification is-danger">
      <p>Oops, something went wrong! Please check the errors below.</p>
    </div>
  <% end %>

    <div class="field is-horizontal">
        <div class="field form-field-left-side">
            <%= label f, :last_name, class: "label" %>
            <div class="control">
                <%= text_input f, :last_name, class: "input", required: true %>
                <%= error_tag f, :last_name %>
            </div>
        </div>
        <div class="field form-field-right-side">
            <%= label f, :first_name, class: "label" %>
            <div class="control">
                <%= text_input f, :first_name, class: "input", required: true %>
                <%= error_tag f, :first_name %>
            </div>
        </div>
    </div>

    <div class="field form-field-half">
        <%= label f, :email, class: "label" %>
        <div class="control">
          <%= text_input f, :email, class: "input", required: true %>
          <%= error_tag f, :email %>
        </div>
    </div>

    <div class="field form-field-half">
        <%= label f, :display_name, class: "label" %>
        <div class="control">
            <%= text_input f, :display_name, class: "input" %>
            <%= error_tag f, :display_name %>
        </div>
    </div>

  <div class="field">
    <%= label f, :introduction_content, class: "label" %>
    <div class="control">
      <%= textarea f, :introduction_content, class: "textarea" %>
      <%= error_tag f, :introduction_content %>
    </div>
  </div>

    <div class="field">
        <label class="label">Avatar Image</label>
    </div>
    <div class="file u-margin-bottom-small">
        <label class="file-label">
            <input class="file-input" id="avatar_img_file_input" name="admin_user[avatar_img]" type="file">
            <input type="hidden" id="temp_avatar_img" name="admin_user[temp_avatar_img]">
            <span class="file-cta">
                    <span class="file-icon"><i class="fa fa-upload"></i></span>
                    <span class="file-label">Choose a fileâ€¦</span>
                  </span>
        </label>
        <div id="crop_button" class="button is-info">
            <span class="file-icon"><i class="fa fa-crop"></i></span>
            Crop Image
        </div>
        <div id="save-avatar" class="button is-primary">
            <span class="file-icon"><i class="fa fa-save"></i></span>
            Save Avatar
        </div>
    </div>

    <div class="image-crop-container">
        <%= if assigns[:admin_user], do: show_user_avatar_image(@conn, @admin_user) %>
        <%= if !assigns[:admin_user], do: show_user_avatar_image(@conn, nil) %>
        <img id="image-container__image" src="#" alt="your avatar" />
    </div>
    <button type="submit" class="button">Submit</button>
<% end %>

<script src="<%= static_path(@conn, "/js/socket/admin-socket.js") %>"></script>
<script src="<%= static_path(@conn, "/vendor/notify/notify.min.js") %>"></script>
<script>
    let saveCount = 0;
    let cropper = null;
    $(document).on("ready", function () {
        let action = '<%= if !assigns[:admin_user] do "new" else "update" end%>';
        let imageUploaderChannel = window.socket.channel("image_uploader", {});
        imageUploaderChannel.join()
            .receive("ok", resp => { console.log("Joined successfully", resp) })
            .receive("error", resp => { console.log("Unable to join", resp) });


        let firstAvatarImageSrc = '';
        $("#avatar-image").ready(function () {
            firstAvatarImageSrc = $("#avatar-image").attr("src");
        });

        $('#avatar_img_file_input').on('change', function(){
            $('#image-container__image').css('visibility', 'visible');
            if (this.files && this.files[0]) {
                if ( this.files[0].type.match(/^image\//) ) {
                    let reader = new FileReader();
                    reader.onload = function(evt) {
                        $('#image-container__image').attr('src', evt.target.result)
                    };
                    reader.readAsDataURL(this.files[0]);
                    setTimeout(initCropper, 500);
                }
            }
        });

        $.notify.addStyle('custom-notify', {
            position: "right",
            html: "<div><span data-notify-text/></div>",
            classes: {primary: {}, danger: {}}
        });

        function initCropper(){
            let image = document.getElementById('image-container__image');
            if(cropper === null){
                cropper = new Cropper(image, {
                    aspectRatio: 1,
                });
            } else {
                newImageURL = $('#image-container__image').attr('src');
                console.log(newImageURL);
                cropper.clear();
                cropper.replace(newImageURL);
            }

            // On crop button clicked
            $('#crop_button').on('click', function(){
                let imgurl =  cropper.getCroppedCanvas({width: 300, height: 300}).toDataURL();
                $("#avatar-image").attr('src',imgurl);
                $("#admin_user_avatar_img").text(imgurl);
            })
        }

        if(action !== 'new'){
            $("#save-avatar").click(saveAvatar);
        } else {
            $("#save-avatar").click(saveTempAvatar);
        }

        function saveAvatar() {
            let image = $("#avatar-image").attr("src");
            if(firstAvatarImageSrc !== image && saveCount < 1){
                let contentType = image.split(",", 2)[0]
                    .replace("data:", "")
                    .replace(";base64", "");
                let base64 = image.split(",", 2)[1];
                imageUploaderChannel
                    .push("image_uploader:new", { "image": base64, "content_type": contentType})
                    .receive("ok", function(reply) {
                        $("#save-avatar").notify("Successfully Saved", {style: "custom-notify", className: "primary", position: "right"});
                        saveCount++;
                    })
                    .receive("error", (reply) => {
                        console.log(reply.message);
                        $("#save-avatar").notify("Save Error", {style: "custom-notify", className: "danger", position: "right"});
                    });
            }
        }

        function saveTempAvatar(){
            let image = $("#avatar-image").attr("src");
            if(firstAvatarImageSrc !== image && saveCount < 1){
                let contentType = image.split(",", 2)[0]
                    .replace("data:", "")
                    .replace(";base64", "");
                let base64 = image.split(",", 2)[1];
                imageUploaderChannel
                    .push("image_uploader:temp", { "image": base64, "content_type": contentType})
                    .receive("ok", (reply) => {
                        $("#temp_avatar_img").val(reply.message);
                        $("#save-avatar").notify("Successfully Saved", {style: "custom-notify", className: "primary", position: "right"});
                        saveCount++;
                    })
                    .receive("error", (reply) => {
                        console.log(reply.message);
                        $("#save-avatar").notify("Save Error", {style: "custom-notify", className: "danger", position: "right"});
                    });
            }
        }
    });
</script>